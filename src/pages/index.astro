---
//Import layouts
import BaseLayout from "../layouts/BaseLayout.astro";

//Import components
import Hero from "@components/Hero.astro";
import Seasons from "@components/seasons/Seasons.svelte";

const url = "http://localhost:8888/.netlify/functions/";

async function getData(url: string, endpoint: string, season?: string ,query?: string) {
  try {
    const completeUrl = `${url}${endpoint}/${season ? season : '' }/${query ? query : ""}`;
    console.log("completeUrl", completeUrl);
    const response = await fetch(completeUrl);
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(error);
  }
}

const seasonsCount = await getData(url, "seasonsCount");
const { totalSeasons, firstSeason } = seasonsCount;
console.log("seasonsCount", seasonsCount);

function getSeasonsYears(totalSeasons: number, firstSeason: string) {
  let firstSeasonYear = extractYear(firstSeason);

  const seasonsLenghtArr = new Array(totalSeasons);

 for (let i = 0; i < totalSeasons; i++) {
    seasonsLenghtArr[i] = `${firstSeasonYear}/${firstSeasonYear + 1}`;
    firstSeasonYear++;
  }

  return seasonsLenghtArr;
}

function extractYear(season: string) {
  const firstSeasonYear = season.split("-")[0];
  const lastTwoDigits = firstSeasonYear.slice(2);
  console.log(lastTwoDigits);
  return +lastTwoDigits;
}

const seasonsYears = getSeasonsYears(totalSeasons, firstSeason);

async function getSeasonsData(totalSeasons: number, firstSeason: string) {
    let firstSeasonYear = extractYear(firstSeason);
    
    const seasonsLenghtArr = new Array(totalSeasons);
    
    for (let i = 0; i < totalSeasons; i++) {
        seasonsLenghtArr[i] = await getData(url, "stats", `19${firstSeasonYear}-${firstSeasonYear + 1}`, 'resultats');
        console.log("seasonsLenghtArr[i]", seasonsLenghtArr[i]);
        firstSeasonYear++;
    }
    
    return seasonsLenghtArr;
}

console.log('getSeasonsData', await getSeasonsData(totalSeasons, firstSeason));
---

<BaseLayout {seasonsYears}>
  <Hero />
  <Seasons client:only />
</BaseLayout>
