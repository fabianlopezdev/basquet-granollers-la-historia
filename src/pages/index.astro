---
//Import layouts
import BaseLayout from "../layouts/BaseLayout.astro";

//Import components
import Hero from "@components/Hero.astro";
import Seasons from "@components/seasons/Seasons.svelte";

import { getSeasonStats } from "@data/stats/stats";
import {getSeasonRelat} from "@data/relats/relats";
import { getSeasonsCount } from "@data/seasonsCount";
import { SEASONS_INFO, SEASONS_LAYOUT } from "@data/globalConstants";

// const url = "http://localhost:8888/.netlify/functions/";

// async function getData(
//   url: string,
//   endpoint: string,
//   season?: string,
//   query?: string,
// ) {
//   try {
//     const completeUrl = `${url}${endpoint}/${season ? season : ""}/${query ? query : ""}`;
//     console.log("completeUrl", completeUrl);
//     const response = await fetch(completeUrl);
//     const data = await response.json();
//     return data;
//   } catch (error) {
//     console.error(error);
//   }
// }

// const seasonsCount = await getData(url, "seasonsCount");
// const { totalSeasons, firstSeason } = seasonsCount;
// console.log("seasonsCount", seasonsCount);

// function getSeasonsYears(totalSeasons: number, firstSeason: string) {
//   let firstSeasonYear = extractYear(firstSeason);

//   const seasonsLenghtArr = new Array(totalSeasons);

//   for (let i = 0; i < totalSeasons; i++) {
//     seasonsLenghtArr[i] = `${firstSeasonYear}/${firstSeasonYear + 1}`;
//     firstSeasonYear++;
//   }

//   return seasonsLenghtArr;
// }

// function extractYear(season: string) {
//   const firstSeasonYear = season.split("-")[0];
//   const lastTwoDigits = firstSeasonYear.slice(2);
//   return +lastTwoDigits;
// }

// const seasonsYears = getSeasonsYears(totalSeasons, firstSeason);

// interface SeasonStats {
//   resultats: object[];
//   resultatsCopaDelRey: object[]; // Replace 'any' with a more specific type if possible
//   classificacio: object[];
//   jugadors: object[];
//   entrenadors: object[];
//   divisio: string;
//   classificacioAscens: object[];
//   ascens: object[];
//   promocioTriangular: object[];
//   promocio: object[];
// }

// class Season {
//   years: string;
//   relat: {html: string, text: string};
//   social: string;
//   stats: SeasonStats;

//   constructor(years: string) {
//     this.years = formatSeasonsYears(years);
//     this.stats = getSeasonStats(years) as unknown as SeasonStats;
//     this.relat = await getSeasonRelat(years);
//     this.social = "";
//   }
// }

function formatSeasonsYears(years: string) {
  const firstYear = years.split('-')[0].slice(-2);
  const secondYear = years.split('-')[1];
  return `${firstYear}/${secondYear}`;
}

const { seasonsCount, firstSeason, listOfSeasons } = getSeasonsCount();

async function getSeasonsData(firstSeason: number, seasonsCount: number) {
  const seasonsData = [];
  let currentSeason = firstSeason;
  for (let i = 0; i < seasonsCount; i++) {
    const season = {
      years: `${currentSeason}/${currentSeason + 1}`,
      stats: getSeasonStats(`19${currentSeason}-${currentSeason + 1}`),
      relat: {content: await getSeasonRelat(`19${currentSeason}-${currentSeason + 1}`),
    props: SEASONS_LAYOUT[i].relatProps},
      social: "",
    }
    // const season = new Season(`19${currentSeason}-${currentSeason + 1}`);
    seasonsData.push(season);
    currentSeason++;
  }

  return seasonsData;
}

const seasons = await getSeasonsData(firstSeason, seasonsCount);

console.log('seasons', seasons[0])
// console.log("seasonsdatalength, ", seasons.length);

---


<BaseLayout {listOfSeasons}>
  <Hero />
  <Seasons client:only {seasons} totalSeasons={seasonsCount}/>
</BaseLayout>
